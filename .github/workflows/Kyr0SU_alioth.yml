name: Build Kyr0SU Kernel for Alioth (EmanuelCN_kernel+KernelSU+Snapdragon LLVM 16.0.3)

on: 
  schedule:
    - cron:  '20 20 * * *'
  workflow_dispatch:

  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Kernel Source Code
      uses: actions/checkout@v3
      with:
        github-server-url: 'https://github.com'
        repository: EmanuelCN/kernel_xiaomi_sm8250
        ref: staging
        path: android-kernel
      
    - name: Setup Build Environment
      run: |
        sudo apt-get update
        sudo apt-get install git-core gnupg flex bison build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 libncurses5 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z1-dev libgl1-mesa-dev libxml2-utils xsltproc unzip fontconfig python-is-python3 python2 cpio p7zip-full
    
    - name: Download Clang Toolchain
      run: |
        mkdir clang
        cd clang
        git clone --depth=1 --branch thirteen https://github.com/PixelExperience/prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9.git gcc-arm64
        git clone --depth=1 --branch thirteen https://github.com/PixelExperience/prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9.git gcc-arm
        git clone --depth=1 https://gitlab.com/VoidUI/snapdragon-clang.git
        cd ./snapdragon-clang
        CLANG_DIR=`pwd`
        echo "CLANG_DIR=$CLANG_DIR" >> $GITHUB_ENV
        
    - name: Download anykernel
      run: |
        cd android-kernel
        git clone https://github.com/kyr0-4/kyr0SU.git anykernel
      
    - name: Setup KernelSU
      run: |
        cd android-kernel
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
        wget -q "https://raw.githubusercontent.com/WeeAris/RK-KSU-AOSP-Daily-Build/main/0001-Add-KernelSU-calls-to-the-kernel-source.patch" -O KernelSU.patch
        git apply ./KernelSU.patch
        
    - name: Fix:Makefile:Properly disable Unknown Warning Option
      run: |
        cd android-kernel
        sed -i 's/CLANG_FLAGS	+= -Werror=unknown-warning-option/CLANG_FLAGS	+= -Werror=unknown-warning-option -Wno-unknown-warning-option/g' "Makefile"
                
    - name: Build Kernel
      run: |
        cd android-kernel
        PATH=${{ env.CLANG_DIR }}/bin:$PATH
        DEVICE_NAME=Alioth
        KERNEL_DEFCONFIG=vendor/alioth_defconfig
        KERNEL_DIR=`pwd`
        echo "KERNEL_DIR=${KERNEL_DIR}" >> $GITHUB_ENV
        echo "ZIMAGE_DIR="${KERNEL_DIR}/out/arch/arm64/boot"" >> $GITHUB_ENV
        cd $KERNEL_DIR/KernelSU
        KSU_VERSION=$((10000+200+`git rev-list --count HEAD`))
        cd $KERNEL_DIR
        clang -v
        ARCH=arm64
        SUBARCH=arm64
        KBUILD_COMPILER_STRING="$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
        KBUILD_BUILD_HOST=GitHub-Action
        KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
        KERNEL_STRING="~Kyr0SU//$IMAGE_VERSION-$KSU_VERSION-$IMAGE_CODE-Snapshot"
        echo "ZIMAGE_NAME=Kyr0SU-${IMAGE_VERSION}-${KSU_VERSION}-${DEVICE_NAME}-AOSP-Snapshot" >> $GITHUB_ENV
        make $KERNEL_DEFCONFIG O=out ARCH=arm64
        sed -i '/CONFIG_LOCALVERSION=/ c  CONFIG_LOCALVERSION='"\"$KERNEL_STRING\""' ' out/.config
        make -j$(nproc --all) O=out \
                      ARCH=arm64 \
                      CC=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/clang \
                      CLANG_TRIPLE=/home/runner/work/kyr0SU/kyr0SU/clang/gcc-arm64/bin/aarch64-linux-gnu- \
                      CROSS_COMPILE=/home/runner/work/kyr0SU/kyr0SU/clang/gcc-arm64/bin/aarch64-linux-android- \
                      CROSS_COMPILE_ARM32=/home/runner/work/kyr0SU/kyr0SU/clang/gcc-arm/bin/arm-linux-androideabi- \
                      LD=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/ld.lld \
                      AR=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/llvm-ar \
                      NM=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/llvm-nm \
                      OBJCOPY=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/llvm-objcopy \
                      OBJDUMP=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/llvm-objdump \
                      STRIP=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/llvm-strip \
                      NM=/home/runner/work/kyr0SU/kyr0SU/clang/snapdragon-clang/bin/llvm-nm \
                      LLVM=1 \
                      LLVM_IAS=1 \
                      HOSTCFLAGS="-fuse-ld=lld -Wno-unused-command-line-argument"
  
    - name: ZIP Kernel
      run: |
        mkdir image_output
        cd android-kernel
        TIME=$(TZ=America/Mexico_City date "+%Y%m%d%H%M")
        mkdir -p tmp
        cp -fp ${{ env.ZIMAGE_DIR }}/Image.gz-dtb tmp
        cp -fp ${{ env.ZIMAGE_DIR }}/dtbo.img tmp
        cp -rp ./anykernel/anykernel/* tmp
        cd tmp
        7za a -mx9 tmp.zip *
        cd ..
        echo "FINAL_ZINAME="${{ env.ZIMAGE_NAME }}-${TIME}"" >> $GITHUB_ENV
        FINAL_ZINAME="${{ env.ZIMAGE_NAME }}-${TIME}"
        mkdir ${{ env.KERNEL_DIR }}/image_output
        cp -fp tmp/tmp.zip ../image_output/${FINAL_ZINAME}.zip
        md5sum ../image_output/${FINAL_ZINAME}.zip >../image_output/${FINAL_ZINAME}.zip.md5sum
        rm -rf out
        
    - name: Upload Kernel Image ZIP
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.FINAL_ZINAME }}
        path: image_output/*
